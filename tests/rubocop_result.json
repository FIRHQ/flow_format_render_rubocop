{
  "metadata": {
    "rubocop_version": "0.37.2",
    "ruby_engine": "ruby",
    "ruby_version": "2.2.0",
    "ruby_patchlevel": "0",
    "ruby_platform": "x86_64-darwin14"
  },
  "files": [
    {
      "path": "app/controllers/api/v1/authors_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 9,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 5,
            "length": 53
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/commits_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 18,
            "column": 5,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/events_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 27,
            "column": 5,
            "length": 52
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/hooks_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for receive is too high. [22.29/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 8,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use `casecmp` instead of `downcase ==`.",
          "cop_name": "Performance/Casecmp",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 23,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 10,
            "column": 7,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 23,
            "length": 29
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 14,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 7,
            "length": 54
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/integrations_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Space missing after colon.",
          "cop_name": "Style/SpaceAfterColon",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body beginning.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 42,
            "column": 5,
            "length": 58
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/invitations_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 41,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 15,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for show is too high. [25.2/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 29,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 11,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Keep a blank line before and after `private`.",
          "cop_name": "Style/EmptyLinesAroundAccessModifier",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 5,
            "length": 76
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 5,
            "length": 65
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 5,
            "length": 176
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 69,
            "column": 7,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 70,
            "column": 9,
            "length": 57
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 5,
            "length": 150
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 75,
            "column": 7,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 76,
            "column": 9,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for verify_invitaiton_email is too high. [24.19/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 80,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 5,
            "length": 485
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 82,
            "column": 9,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [186/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 86,
            "column": 121,
            "length": 66
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 125,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 87,
            "column": 9,
            "length": 56
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 91,
            "column": 5,
            "length": 229
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 93,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 94,
            "column": 11,
            "length": 53
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 98,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/job_steps_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Space inside square brackets detected.",
          "cop_name": "Style/SpaceInsideBrackets",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside square brackets detected.",
          "cop_name": "Style/SpaceInsideBrackets",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 22,
            "column": 5,
            "length": 50
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 27,
            "column": 5,
            "length": 55
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/jobs_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 5,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `*`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Avoid rescuing the `Exception` class. Perhaps you meant to rescue `StandardError`?",
          "cop_name": "Lint/RescueException",
          "corrected": null,
          "location": {
            "line": 22,
            "column": 5,
            "length": 57
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `e`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 22,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 39,
            "column": 5,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 44,
            "column": 5,
            "length": 50
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/members_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Space missing to the left of {.",
          "cop_name": "Style/SpaceBeforeBlockBraces",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space between { and | missing.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 29,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 60,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [135/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 11,
            "column": 121,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing inside }.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for destroy is too high. [15.13/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 15,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 22,
            "column": 7,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Keep a blank line before and after `private`.",
          "cop_name": "Style/EmptyLinesAroundAccessModifier",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 5,
            "length": 160
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 29,
            "column": 7,
            "length": 53
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/notifications_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 5,
            "length": 99
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 5,
            "length": 187
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 43,
            "column": 7,
            "length": 59
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/project_templates_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Space inside square brackets detected.",
          "cop_name": "Style/SpaceInsideBrackets",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside square brackets detected.",
          "cop_name": "Style/SpaceInsideBrackets",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside square brackets detected.",
          "cop_name": "Style/SpaceInsideBrackets",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside square brackets detected.",
          "cop_name": "Style/SpaceInsideBrackets",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Keep a blank line before and after `private`.",
          "cop_name": "Style/EmptyLinesAroundAccessModifier",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 23,
            "column": 7,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 7,
            "length": 63
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [130/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 121,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/projects_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [160/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 48,
            "column": 5,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for tpl is too high. [15.17/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 73,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 75,
            "column": 7,
            "length": 54
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 77,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 78,
            "column": 7,
            "length": 63
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for trigger is too high. [16.4/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 89,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 157,
            "column": 5,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 159,
            "column": 5,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [163/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 163,
            "column": 121,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 189,
            "column": 5,
            "length": 54
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/pulls_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 25,
            "column": 5,
            "length": 51
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/sessions_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Space missing after colon.",
          "cop_name": "Style/SpaceAfterColon",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after colon.",
          "cop_name": "Style/SpaceAfterColon",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 10,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 25,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 38,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for create is too high. [20.62/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 15,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [145/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 121,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 18,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 23,
            "column": 9,
            "length": 57
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 26,
            "column": 7,
            "length": 57
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for signup_link is too high. [15.26/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 30,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 32,
            "column": 5,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 7,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 81,
            "column": 5,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 82,
            "column": 5,
            "length": 47
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 82,
            "column": 75,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 86,
            "column": 5,
            "length": 50
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 87,
            "column": 5,
            "length": 53
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/step_templates_controller.rb",
      "offenses": []
    },
    {
      "path": "app/controllers/api/v1/steps_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 47,
            "column": 5,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 54,
            "column": 7,
            "length": 51
          }
        },
        {
          "severity": "warning",
          "message": "Avoid rescuing the `Exception` class. Perhaps you meant to rescue `StandardError`?",
          "cop_name": "Lint/RescueException",
          "corrected": null,
          "location": {
            "line": 62,
            "column": 5,
            "length": 39
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `e`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 62,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 74,
            "column": 5,
            "length": 59
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 75,
            "column": 5,
            "length": 60
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 75,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [138/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 75,
            "column": 121,
            "length": 18
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/supports_controller.rb",
      "offenses": []
    },
    {
      "path": "app/controllers/api/v1/timers_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Space missing after colon.",
          "cop_name": "Style/SpaceAfterColon",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body beginning.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body beginning.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Keep a blank line before and after `private`.",
          "cop_name": "Style/EmptyLinesAroundAccessModifier",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 43,
            "column": 5,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 47,
            "column": 4,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/user/bitbucket_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 78,
            "column": 6,
            "length": 2
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/user/github_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 5,
            "length": 2
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/user/gitlabs_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [166/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 5,
            "column": 121,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 85,
            "column": 5,
            "length": 58
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/users_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/controllers/api/v1/webhooks_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body end.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after colon.",
          "cop_name": "Style/SpaceAfterColon",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after colon.",
          "cop_name": "Style/SpaceAfterColon",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body end.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 45,
            "column": 5,
            "length": 54
          }
        }
      ]
    },
    {
      "path": "app/controllers/application_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 42,
            "column": 5,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `*`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 42,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 39,
            "length": 13
          }
        }
      ]
    },
    {
      "path": "app/controllers/big_brother_controller.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for listen is too high. [24.08/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 2,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 15,
            "length": 26
          }
        }
      ]
    },
    {
      "path": "app/controllers/concerns/error_handler.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body beginning.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `v`. If it's necessary, use `_` or `_v` as an argument name to indicate that it won't be used.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 33,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 9,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 29,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 30,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 31,
            "column": 9,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 36,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 43,
            "column": 9,
            "length": 60
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 48,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 54,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 61,
            "column": 7,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 29,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 7,
            "length": 6
          }
        },
        {
          "severity": "warning",
          "message": "Unused method argument - `exception`. If it's necessary, use `_` or `_exception` as an argument name to indicate that it won't be used. You can also write as `render_with_gitlab_exception(*)` if you want the method to accept any arguments but don't care about them.",
          "cop_name": "Lint/UnusedMethodArgument",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 38,
            "length": 9
          }
        }
      ]
    },
    {
      "path": "app/controllers/errors_controller.rb",
      "offenses": []
    },
    {
      "path": "app/controllers/welcome_controller.rb",
      "offenses": []
    },
    {
      "path": "app/helpers/email_helper.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body beginning.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 20,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 31,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 71,
            "length": 74
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 11,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 29,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Indent the right brace the same as the first position after the preceding left parenthesis.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 9,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/helpers/git_helper.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [164/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 4,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 5,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 26,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 25,
            "length": 29
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 59,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 7,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Avoid the use of Perl-style backrefs.",
          "cop_name": "Style/PerlBackrefs",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 31,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid the use of Perl-style backrefs.",
          "cop_name": "Style/PerlBackrefs",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 35,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for git_clone is too high. [15.43/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 86,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 17,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 5,
            "length": 150
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 25,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 26,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for git_pull is too high. [17.38/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 106,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 16,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 22,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 22,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 119,
            "column": 26,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Rename `is_conflicted?` to `conflicted?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 125,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor `unless` over `if` for negative conditions.",
          "cop_name": "Style/NegatedIf",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 9,
            "length": 75
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `private_key`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 136,
            "column": 5,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for guess_language is too high. [42.26/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 140,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for guess_language is too high. [12/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 140,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Perceived complexity for guess_language is too high. [13/7]",
          "cop_name": "Metrics/PerceivedComplexity",
          "corrected": null,
          "location": {
            "line": 140,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 144,
            "column": 11,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 146,
            "column": 11,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 148,
            "column": 11,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 150,
            "column": 11,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 150,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 152,
            "column": 11,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 152,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 154,
            "column": 11,
            "length": 45
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 154,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless `private` access modifier.",
          "cop_name": "Lint/UselessAccessModifier",
          "corrected": null,
          "location": {
            "line": 160,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 162,
            "column": 5,
            "length": 221
          }
        },
        {
          "severity": "convention",
          "message": "Space between { and | missing.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 45,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing inside }.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `answer`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 164,
            "column": 7,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 171,
            "column": 5,
            "length": 141
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 32,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 45,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 5,
            "length": 175
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 33,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 178,
            "column": 14,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 28,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 5,
            "length": 197
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 185,
            "column": 14,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 186,
            "column": 24,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 5,
            "length": 248
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 192,
            "column": 39,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 192,
            "column": 47,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 192,
            "column": 58,
            "length": 9
          }
        },
        {
          "severity": "warning",
          "message": "Avoid rescuing the `Exception` class. Perhaps you meant to rescue `StandardError`?",
          "cop_name": "Lint/RescueException",
          "corrected": null,
          "location": {
            "line": 193,
            "column": 7,
            "length": 77
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=>` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 24,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `e`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 193,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 194,
            "column": 27,
            "length": 28
          }
        }
      ]
    },
    {
      "path": "app/helpers/publisher.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body beginning.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 1,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/helpers/site_helper.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 30,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Avoid the use of Perl-style backrefs.",
          "cop_name": "Style/PerlBackrefs",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 47,
            "length": 2
          }
        }
      ]
    },
    {
      "path": "app/middleware/catch_malicious_errors.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 18,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 12,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 5,
            "length": 5
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `error`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 12,
            "column": 86,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 22,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 16,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 34,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Space inside square brackets detected.",
          "cop_name": "Style/SpaceInsideBrackets",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside square brackets detected.",
          "cop_name": "Style/SpaceInsideBrackets",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 55,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/models/ability.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 17,
            "length": 107
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 42,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/models/admin.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 18,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 6,
            "column": 5,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 16,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 18,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 19,
            "length": 12
          }
        }
      ]
    },
    {
      "path": "app/models/author.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 56,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing inside }.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 34,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 18,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 43,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 14,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 48, 4 is not aligned with `authors.map do |author|` at 39, 8.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 5,
            "length": 3
          }
        }
      ]
    },
    {
      "path": "app/models/commit.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 35,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 9,
            "length": 33
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 9,
            "length": 36
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for handle is too high. [36.81/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 65,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 30,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 44,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for handle_bitbucket is too high. [34.31/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 61,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 26,
            "length": 11
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 70,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 53,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 58,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 97,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 102,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 110,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 115,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 51,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 56,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 94,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 99,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/models/committer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 56,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing inside }.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 34,
            "length": 16
          }
        }
      ]
    },
    {
      "path": "app/models/concerns/parser.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 10,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 5,
            "length": 121
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 8,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 37,
            "length": 7
          }
        },
        {
          "severity": "warning",
          "message": "Redundant use of `Object#to_s` in interpolation.",
          "cop_name": "Lint/StringConversionInInterpolation",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 45,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 13,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 29,
            "length": 7
          }
        },
        {
          "severity": "warning",
          "message": "Redundant use of `Object#to_s` in interpolation.",
          "cop_name": "Lint/StringConversionInInterpolation",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 37,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 26,
            "length": 7
          }
        },
        {
          "severity": "warning",
          "message": "Redundant use of `Object#to_s` in interpolation.",
          "cop_name": "Lint/StringConversionInInterpolation",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 34,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 76,
            "length": 7
          }
        },
        {
          "severity": "warning",
          "message": "Redundant use of `Object#to_s` in interpolation.",
          "cop_name": "Lint/StringConversionInInterpolation",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 84,
            "length": 4
          }
        }
      ]
    },
    {
      "path": "app/models/concerns/serialize_helper.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 32,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 14,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/models/event/base.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 65,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 54,
            "column": 13,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for send_event_to_user is too high. [15.26/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 60,
            "column": 18,
            "length": 3
          }
        }
      ]
    },
    {
      "path": "app/models/event/bitbucket/pull_request.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for create_from_project is too high. [16.58/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 5,
            "column": 5,
            "length": 3
          }
        }
      ]
    },
    {
      "path": "app/models/event/bitbucket/push.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for analysis_git_commit is too high. [16.4/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 6,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for create_from_project is too high. [16.79/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 36,
            "length": 18
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `event_key`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 7,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 35,
            "length": 18
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `repo_url`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 25,
            "column": 7,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 41,
            "length": 163
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 9,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 15,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 15,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Indent the right brace the same as the first position after the preceding left parenthesis.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 15,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Keep a blank line before and after `private`.",
          "cop_name": "Style/EmptyLinesAroundAccessModifier",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Rename `is_deleted_event?` to `deleted_event?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 38,
            "column": 9,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 27,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 7,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for parser_head_commit is too high. [26.55/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 47,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 28,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 55,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 53,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 58,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 97,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 102,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 110,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 115,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 51,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 56,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 94,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 99,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 11,
            "length": 29
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for parser_body is too high. [19.82/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 71,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 21,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `repo`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 72,
            "column": 7,
            "length": 4
          }
        }
      ]
    },
    {
      "path": "app/models/event/bitbucket/switcher.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 42,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 36,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 18,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 40,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 18,
            "length": 14
          }
        }
      ]
    },
    {
      "path": "app/models/event/github/pull_request.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for build_from_project is too high. [18.17/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for triggered_by is too high. [7/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 48,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Rename `is_merged?` to `merged?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 94,
            "column": 9,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Rename `has_pull_request_info?` to `pull_request_info?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 98,
            "column": 9,
            "length": 22
          }
        }
      ]
    },
    {
      "path": "app/models/event/github/push.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for send_to_github_status is too high. [19.21/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 6,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for create_from_project is too high. [24.1/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 29,
            "column": 5,
            "length": 3
          }
        }
      ]
    },
    {
      "path": "app/models/event/github/switcher.rb",
      "offenses": []
    },
    {
      "path": "app/models/event/gitlab/pull_request.rb",
      "offenses": [
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `ref`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 24,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [135/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 121,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Rename `is_merged?` to `merged?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 84,
            "column": 9,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Rename `has_pull_request_info?` to `pull_request_info?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 88,
            "column": 9,
            "length": 22
          }
        }
      ]
    },
    {
      "path": "app/models/event/gitlab/push.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for create_from_project is too high. [18.14/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 13,
            "column": 5,
            "length": 3
          }
        }
      ]
    },
    {
      "path": "app/models/event/gitlab/switcher.rb",
      "offenses": []
    },
    {
      "path": "app/models/event/manual.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 7,
            "length": 305
          }
        }
      ]
    },
    {
      "path": "app/models/event/pull_request.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Line is too long. [157/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 22,
            "column": 121,
            "length": 37
          }
        }
      ]
    },
    {
      "path": "app/models/event/push.rb",
      "offenses": []
    },
    {
      "path": "app/models/event/timer.rb",
      "offenses": []
    },
    {
      "path": "app/models/gitlab_info.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [144/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 49,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 51,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 14,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 7,
            "length": 149
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 31,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 36,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 37,
            "column": 14,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 49,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 36,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for list_org_repos is too high. [22.45/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 55,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 56,
            "column": 14,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 25,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 25,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 25,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 47,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 25,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 25,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 25,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 68,
            "column": 27,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 71,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 36,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for list_user_repos is too high. [21.47/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 76,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 77,
            "column": 14,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 44,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 44,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 92,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 36,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 57,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 0 instead of 2).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 1,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 137,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 138,
            "column": 14,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 138,
            "column": 46,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Pass `&:name` as an argument to `map` instead of a block.",
          "cop_name": "Style/SymbolProc",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 24,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 144,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 144,
            "column": 35,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 145,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 145,
            "column": 37,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 151,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 8,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 152,
            "column": 23,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 160,
            "column": 5,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 26,
            "length": 60
          }
        }
      ]
    },
    {
      "path": "app/models/integration/base.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 57,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 44,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 82,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 34,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 20,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 57,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 47,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 15,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 29,
            "column": 7,
            "length": 59
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 14,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/models/integration/custom.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 39,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 8,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 15,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 15,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 15,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 30,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `unless` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 7,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 28,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 20,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 14,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 21,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 40,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 21,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/models/integration/email.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 42,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 42,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 19,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 59,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 75,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 10,
            "column": 5,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 20,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 12,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for build_template_and_send is too high. [77.63/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 23,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for build_template_and_send is too high. [14/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 23,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [60/30]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 23,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Perceived complexity for build_template_and_send is too high. [16/7]",
          "cop_name": "Metrics/PerceivedComplexity",
          "corrected": null,
          "location": {
            "line": 23,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 31,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 22,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 51,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 49,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing to the left of {.",
          "cop_name": "Style/SpaceBeforeBlockBraces",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space between { and | missing.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 35,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 34,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 46,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 58,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 42,
            "column": 25,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 34,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 46,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 58,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 25,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 66,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 63,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 34,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 46,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 58,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 5,
            "length": 141
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 24,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 79,
            "column": 7,
            "length": 58
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 7 instead of 8).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 81,
            "column": 8,
            "length": 75
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 28,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Optional arguments should appear at the end of the argument list.",
          "cop_name": "Style/OptionalArguments",
          "corrected": null,
          "location": {
            "line": 90,
            "column": 35,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 43,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 91,
            "column": 82,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 29,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Optional arguments should appear at the end of the argument list.",
          "cop_name": "Style/OptionalArguments",
          "corrected": null,
          "location": {
            "line": 97,
            "column": 36,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 44,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 98,
            "column": 84,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 105,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "app/models/integration/slack.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 39,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 31,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 52,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 66,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 9,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 19,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 19,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Avoid comma after the last item of a hash.",
          "cop_name": "Style/TrailingCommaInLiteral",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `res`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 12,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 27,
            "length": 10
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `e`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 14,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 6,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 17,
            "length": 32
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `res`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 22,
            "column": 82,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 7,
            "length": 10
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `e`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 26,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for payload is too high. [20.32/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 17,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [32/30]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 17,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 2,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 5,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 19,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 8,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 13,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 45,
            "length": 112
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 45,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [125/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 44,
            "column": 101,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 119,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 80,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 87,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 19,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 43,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 66,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in an array, relative to the start of the line where the left square bracket is.",
          "cop_name": "Style/IndentArray",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 22,
            "length": 135
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 1,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 1,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 11,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 1,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 11,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 1,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 1,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 1,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 11,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 1,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 1,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 1,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 1,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 11,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 1,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 11,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 1,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Indent the right bracket the same as the start of the line where the left bracket is.",
          "cop_name": "Style/IndentArray",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 5,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "app/models/invitation.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 51,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 12,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 33,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for push_to_create is too high. [17.38/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 29,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 37,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 35,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 17,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 18,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 42,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body end.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 13,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 40,
            "length": 20
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `user`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 59,
            "column": 8,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 59,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 35,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 31,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 45,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 59,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix reader method names with `get_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 66,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 33,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 68,
            "column": 32,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 59,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 78,
            "column": 75,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 78,
            "column": 101,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body beginning.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 88,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 7,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 91,
            "column": 7,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 7,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 39,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 93,
            "column": 7,
            "length": 38
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 31,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 45,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body end.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 20,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 15,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 102,
            "column": 16,
            "length": 12
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `answer`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 104,
            "column": 7,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 105,
            "column": 13,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 37,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 72,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 40,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 32,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 51,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 120,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/models/job.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 35,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 23,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 48,
            "length": 15
          }
        }
      ]
    },
    {
      "path": "app/models/job_step.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 39,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 41,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 31,
            "column": 5,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 32,
            "column": 22,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 66,
            "length": 20
          }
        }
      ]
    },
    {
      "path": "app/models/notification/base.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 5,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 36,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 15,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for list is too high. [25.5/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 44,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 14,
            "length": 10
          }
        }
      ]
    },
    {
      "path": "app/models/notification/invitation.rb",
      "offenses": []
    },
    {
      "path": "app/models/notification/system.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 56,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 16,
            "length": 4
          }
        }
      ]
    },
    {
      "path": "app/models/project/gitlab_project.rb",
      "offenses": []
    },
    {
      "path": "app/models/project/permission.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 39,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 26,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 7,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 16,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 7,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 30,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Put a space before an end-of-line comment.",
          "cop_name": "Style/SpaceBeforeComment",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 30,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 18,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 33,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 33,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 23,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 23,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 68,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for message_to_member is too high. [18.68/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 72,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 27,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 42,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 7,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 59,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 79,
            "column": 53,
            "length": 159
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 11,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 25,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 23,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Indent the right brace the same as the first position after the preceding left parenthesis.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 28,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 91,
            "column": 52,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 29,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 95,
            "column": 53,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 30,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 22,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 25,
            "length": 9
          }
        }
      ]
    },
    {
      "path": "app/models/project.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [209/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 30,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 61,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 48,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 57,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 68,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 33,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 39,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 49,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 102,
            "column": 7,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 38,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 65,
            "length": 69
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 13,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 38,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 68,
            "length": 75
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 115,
            "column": 13,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Annotation keywords like `TODO` should be all upper case, followed by a colon, and a space, then a note describing the problem.",
          "cop_name": "Style/CommentAnnotation",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 129,
            "column": 37,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 38,
            "length": 7
          }
        },
        {
          "severity": "warning",
          "message": "`Dir.exists?` is deprecated in favor of `Dir.exist?`.",
          "cop_name": "Lint/DeprecatedClassMethods",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 31,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 135,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 32,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 141,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 144,
            "column": 7,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 34,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 150,
            "column": 5,
            "length": 33
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 151,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 152,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 155,
            "column": 9,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 158,
            "column": 7,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 167,
            "column": 36,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 28,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Put a space before an end-of-line comment.",
          "cop_name": "Style/SpaceBeforeComment",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 28,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 185,
            "column": 31,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 31,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 199,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 30,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 41,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for transfer is too high. [27.09/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 205,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 16,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 8,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 211,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 215,
            "column": 5,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 216,
            "column": 5,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 219,
            "column": 5,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 40,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 60,
            "length": 53
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 222,
            "column": 11,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 225,
            "column": 29,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 225,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 228,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 241,
            "column": 5,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 248,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 253,
            "column": 19,
            "length": 9
          }
        }
      ]
    },
    {
      "path": "app/models/project_template.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 20,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 20,
            "column": 7,
            "length": 60
          }
        },
        {
          "severity": "warning",
          "message": "Do not use prefix `_` for a variable that is used.",
          "cop_name": "Lint/UnderscorePrefixedVariableName",
          "corrected": null,
          "location": {
            "line": 27,
            "column": 5,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 14,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 7,
            "length": 132
          }
        }
      ]
    },
    {
      "path": "app/models/pull.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 40,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 43,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 41,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 46,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 49,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 48,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 33,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 14,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `=~` in places where the `MatchData` returned by `#match` will not be used.",
          "cop_name": "Performance/RedundantMatch",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 83,
            "length": 29
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `crit`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 27,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 41,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 72,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "2 trailing blank lines detected.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 1,
            "length": 2
          }
        }
      ]
    },
    {
      "path": "app/models/settings.rb",
      "offenses": []
    },
    {
      "path": "app/models/signup_link.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 51,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 31,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 9,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing inside {.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 30,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing inside }.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 29,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 45,
            "length": 9
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 30,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 35,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 29,
            "length": 4
          }
        }
      ]
    },
    {
      "path": "app/models/step/build.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 15,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 31,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 24,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 12,
            "length": 26
          }
        }
      ]
    },
    {
      "path": "app/models/step/cache.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 24,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 44,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 53,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 12,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 42,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 51,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 12,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix writer method names with `set_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 35,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 22,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 12,
            "length": 14
          }
        }
      ]
    },
    {
      "path": "app/models/step/custom.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 15,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 13,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 31,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 12,
            "length": 20
          }
        }
      ]
    },
    {
      "path": "app/models/step/database.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 5,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 27,
            "length": 33
          }
        }
      ]
    },
    {
      "path": "app/models/step/deploy.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 15,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 13,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 31,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 12,
            "length": 27
          }
        }
      ]
    },
    {
      "path": "app/models/step/env.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 23,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 31,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 12,
            "length": 24
          }
        }
      ]
    },
    {
      "path": "app/models/step/git.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 7,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 7,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 7,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for init_tpl_values is too high. [16.03/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 20,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 12,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 12,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 12,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 12,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix writer method names with `set_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 35,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 22,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 12,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 12,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 42,
            "column": 12,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 12,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 12,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "`%r`-literals should be delimited by `{` and `}`.",
          "cop_name": "Style/PercentLiteralDelimiters",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 16,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Avoid the use of Perl-style backrefs.",
          "cop_name": "Style/PerlBackrefs",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 67,
            "length": 2
          }
        }
      ]
    },
    {
      "path": "app/models/step/init.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 12,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 12,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix writer method names with `set_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 23,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 22,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 12,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 12,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 49,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 12,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 49,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 35,
            "length": 12
          }
        },
        {
          "severity": "warning",
          "message": "Redundant use of `Object#to_s` in interpolation.",
          "cop_name": "Lint/StringConversionInInterpolation",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 51,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 37,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 37,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [36/30]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 49,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 5,
            "length": 93
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 29,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 49,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 67,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 71,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 89,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space inside empty hash literal braces detected.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 10,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 10,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 10,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 9,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 9,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 9,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 68,
            "column": 10,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 10,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 10,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 9,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 34,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 9,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 34,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 9,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 34,
            "length": 2
          }
        }
      ]
    },
    {
      "path": "app/models/step/install.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 15,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 13,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 31,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 12,
            "length": 28
          }
        }
      ]
    },
    {
      "path": "app/models/step/plugin/email.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for init_tpl_values is too high. [7/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 31,
            "column": 3,
            "length": 3
          }
        }
      ]
    },
    {
      "path": "app/models/step/plugin/fir.rb",
      "offenses": []
    },
    {
      "path": "app/models/step/plugin/qiniu_upload.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for init_tpl_values is too high. [19.34/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 35,
            "column": 3,
            "length": 3
          }
        }
      ]
    },
    {
      "path": "app/models/step/plugin/slack.rb",
      "offenses": []
    },
    {
      "path": "app/models/step/test.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 15,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 13,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 31,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 12,
            "length": 25
          }
        }
      ]
    },
    {
      "path": "app/models/step.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [158/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Avoid single-line method definitions.",
          "cop_name": "Style/SingleLineMethods",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 3,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 29,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix writer method names with `set_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 38,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Avoid single-line method definitions.",
          "cop_name": "Style/SingleLineMethods",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 3,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Avoid single-line method definitions.",
          "cop_name": "Style/SingleLineMethods",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 3,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Avoid single-line method definitions.",
          "cop_name": "Style/SingleLineMethods",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 3,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 9,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 29,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 41,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 42,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 42,
            "length": 5
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 81,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Convert `if` nested inside `else` to `elsif`.",
          "cop_name": "Style/IfInsideElse",
          "corrected": null,
          "location": {
            "line": 86,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 86,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 88,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Rename `has_next_step?` to `next_step?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 128,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Avoid the use of double negation (`!!`).",
          "cop_name": "Style/DoubleNegation",
          "corrected": null,
          "location": {
            "line": 129,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Rename `has_prior_step?` to `prior_step?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 132,
            "column": 7,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Avoid the use of double negation (`!!`).",
          "cop_name": "Style/DoubleNegation",
          "corrected": null,
          "location": {
            "line": 133,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Rename `is_top_step?` to `top_step?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 136,
            "column": 7,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Rename `is_bottom_step?` to `bottom_step?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 140,
            "column": 7,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 190,
            "column": 24,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 26,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings inside interpolations.",
          "cop_name": "Style/StringLiteralsInInterpolation",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 42,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for insert is too high. [28.51/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 199,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 201,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 205,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 213,
            "column": 23,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/models/step_template.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 29,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 36,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 41,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 34,
            "length": 45
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 50,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 44,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/models/timer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 15,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 9,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 22,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 19,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 7,
            "length": 153
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 19,
            "length": 140
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 9,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Indent the right brace the same as the first position after the preceding left parenthesis.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 14,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 20,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 32,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 59,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 16,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 7,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `%`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 15,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Pass `&:trigger` as an argument to `each` instead of a block.",
          "cop_name": "Style/SymbolProc",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 66,
            "length": 63
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 9,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Annotation keywords like `todo` should be all upper case, followed by a colon, and a space, then a note describing the problem.",
          "cop_name": "Style/CommentAnnotation",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 10,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for format_time is too high. [23.43/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 67,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 21,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 68,
            "column": 24,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 26,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 70,
            "column": 7,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 71,
            "column": 7,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Use `=~` in places where the `MatchData` returned by `#match` will not be used.",
          "cop_name": "Performance/RedundantMatch",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 63,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 72,
            "column": 7,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 7,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 27,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 79,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/models/user/plan.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 34,
            "length": 6
          }
        }
      ]
    },
    {
      "path": "app/models/user.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Space missing after colon.",
          "cop_name": "Style/SpaceAfterColon",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [148/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 34,
            "column": 121,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 30,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 33,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 56,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing inside }.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 33,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 24,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 26,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 29,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 51,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 35,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 21,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer the use of `lambda.call(...)` over `lambda.(...)`.",
          "cop_name": "Style/LambdaCall",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 5,
            "length": 68
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 19,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 21,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 43,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Rename `is_locked?` to `locked?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 80,
            "column": 7,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 81,
            "column": 6,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Rename `has_project_perm?` to `project_perm?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 84,
            "column": 7,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 25,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 40,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Avoid the use of double negation (`!!`).",
          "cop_name": "Style/DoubleNegation",
          "corrected": null,
          "location": {
            "line": 88,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 19,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 99,
            "column": 5,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 30,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 104,
            "column": 20,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 43,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 112,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 112,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/models/user_bitbucket.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Module has too many lines. [182/100]",
          "cop_name": "Metrics/ModuleLength",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 1,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body beginning.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 71,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix writer method names with `set_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 9,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 13,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 39,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 67,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 14,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 39,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `*`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `*`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 63,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Avoid rescuing the `Exception` class. Perhaps you meant to rescue `StandardError`?",
          "cop_name": "Lint/RescueException",
          "corrected": null,
          "location": {
            "line": 15,
            "column": 5,
            "length": 91
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `e`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 15,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 7,
            "length": 63
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 17,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 47,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 33,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for bitbucket_user is too high. [23.54/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 27,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 14,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 44,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 32,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 9,
            "length": 57
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 41,
            "column": 9,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for list_bitbucket_orgs is too high. [21.75/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 49,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 50,
            "column": 13,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 43,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 54,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 57,
            "column": 11,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 43,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `*`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 98,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 104,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 25,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 65,
            "column": 9,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for list_bitbucket_org_repos is too high. [26.44/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 73,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body beginning.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 75,
            "column": 17,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 47,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 68,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 76,
            "column": 14,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 44,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 80,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use `find` instead of `select.first`.",
          "cop_name": "Performance/Detect",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 39,
            "length": 35
          }
        },
        {
          "severity": "convention",
          "message": "Space missing to the left of {.",
          "cop_name": "Style/SpaceBeforeBlockBraces",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space between { and | missing.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 45,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 62,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Space missing inside }.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 63,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 92,
            "column": 9,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 73,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 102,
            "column": 14,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 102,
            "column": 49,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 105,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 105,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 106,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 38,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 107,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 40,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 112,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for list_bitbucket_user_repos is too high. [23.87/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 114,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 115,
            "column": 14,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 115,
            "column": 44,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 119,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use `find` instead of `select.first`.",
          "cop_name": "Performance/Detect",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 39,
            "length": 35
          }
        },
        {
          "severity": "convention",
          "message": "Space missing to the left of {.",
          "cop_name": "Style/SpaceBeforeBlockBraces",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space between { and | missing.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 45,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 62,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Space missing inside }.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 65,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 130,
            "column": 9,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 140,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 149,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `res`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 164,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 39,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 31,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `res`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 182,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for current_bitbucket is too high. [17.12/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 185,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 186,
            "column": 12,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 186,
            "column": 42,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 187,
            "column": 13,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 187,
            "column": 43,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 59,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 35,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 197,
            "column": 5,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 200,
            "column": 21,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 202,
            "column": 5,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 37,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 65,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 203,
            "column": 5,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 203,
            "column": 35,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Keep a blank line before and after `private`.",
          "cop_name": "Style/EmptyLinesAroundAccessModifier",
          "corrected": false,
          "location": {
            "line": 207,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 208,
            "column": 5,
            "length": 75
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 208,
            "column": 24,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 208,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 208,
            "column": 28,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 15,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 25,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 33,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 38,
            "length": 3
          }
        }
      ]
    },
    {
      "path": "app/models/user_github.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Module has too many lines. [185/100]",
          "cop_name": "Metrics/ModuleLength",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 1,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body beginning.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 50,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix writer method names with `set_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 13,
            "column": 7,
            "length": 16
          }
        },
        {
          "severity": "warning",
          "message": "Avoid rescuing the `Exception` class. Perhaps you meant to rescue `StandardError`?",
          "cop_name": "Lint/RescueException",
          "corrected": null,
          "location": {
            "line": 18,
            "column": 5,
            "length": 88
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `e`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 18,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 7,
            "length": 60
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for github_user is too high. [16.76/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 23,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 24,
            "column": 14,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 9,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 31,
            "column": 9,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 38,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for list_orgs is too high. [17.72/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 39,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 40,
            "column": 14,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 44,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 52,
            "column": 9,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 38,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for list_org_repos is too high. [20.62/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 60,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 61,
            "column": 14,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 65,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 75,
            "column": 9,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 38,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for list_user_repos is too high. [20.62/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 83,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 84,
            "column": 14,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 41,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 45,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 88,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 98,
            "column": 9,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 98,
            "column": 38,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 108,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Avoid rescuing the `Exception` class. Perhaps you meant to rescue `StandardError`?",
          "cop_name": "Lint/RescueException",
          "corrected": null,
          "location": {
            "line": 118,
            "column": 5,
            "length": 91
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 119,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 119,
            "column": 26,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 7,
            "length": 29
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 125,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 134,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Avoid rescuing the `Exception` class. Perhaps you meant to rescue `StandardError`?",
          "cop_name": "Lint/RescueException",
          "corrected": null,
          "location": {
            "line": 144,
            "column": 5,
            "length": 91
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 145,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 145,
            "column": 26,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 7,
            "length": 33
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 150,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 160,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use `%w` or `%W` for an array of words.",
          "cop_name": "Style/WordArray",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 93,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 94,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 102,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [132/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 169,
            "column": 121,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 170,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body end.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for fetch_github_branch_names is too high. [19.1/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 183,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 184,
            "column": 14,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 46,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 192,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space between { and | missing.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 26,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Pass `&:name` as an argument to `map` instead of a block.",
          "cop_name": "Style/SymbolProc",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 26,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing inside }.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 195,
            "column": 9,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 195,
            "column": 37,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 196,
            "column": 9,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 196,
            "column": 39,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 207,
            "column": 41,
            "length": 17
          }
        }
      ]
    },
    {
      "path": "app/models/webhook/custom.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 43,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 13,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 13,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 13,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 28,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 11,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `unless` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 24,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 20,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 21,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 40,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 21,
            "length": 8
          }
        }
      ]
    },
    {
      "path": "app/models/webhook/slack.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 43,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 29,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 50,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 62,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 9,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 19,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 19,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Avoid comma after the last item of a hash.",
          "cop_name": "Style/TrailingCommaInLiteral",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `res`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 11,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 27,
            "length": 8
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `e`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 13,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 4,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body beginning.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 11,
            "length": 5
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `res`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 20,
            "column": 23,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 7,
            "length": 8
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `e`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 25,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for payload is too high. [16.16/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 27,
            "column": 17,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 2,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body beginning.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `data`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 31,
            "column": 6,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 1,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 13,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 3,
            "length": 36
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 2,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 43,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 50,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 57,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 80,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 87,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 19,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 43,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 3,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 10,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 42,
            "column": 38,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 99,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 106,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 19,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 43,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 5,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "app/models/webhook.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 43,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 15,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 50,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 23,
            "column": 5,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 7,
            "length": 50
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 44,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/serializers/commit_serializer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 23,
            "length": 6
          }
        }
      ]
    },
    {
      "path": "app/serializers/event/base_serializer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Align the parameters of a method call if they span more than one line.",
          "cop_name": "Style/AlignParameters",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 5,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Align the parameters of a method call if they span more than one line.",
          "cop_name": "Style/AlignParameters",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Align the parameters of a method call if they span more than one line.",
          "cop_name": "Style/AlignParameters",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 5,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Use `%w` or `%W` for an array of words.",
          "cop_name": "Style/WordArray",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 3,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 4,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 21,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 29,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 19,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 25,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `else`-clause.",
          "cop_name": "Style/EmptyElse",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 34,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 61,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 38,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 38,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 38,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 23,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 23,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 25,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `else`-clause.",
          "cop_name": "Style/EmptyElse",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space between { and | missing.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 21,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [136/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 62,
            "column": 121,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing inside }.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 136,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/serializers/gitlab_info_serializer.rb",
      "offenses": []
    },
    {
      "path": "app/serializers/integration_serializer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 38,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 38,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 5,
            "length": 6
          }
        }
      ]
    },
    {
      "path": "app/serializers/invitation_serializer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "app/serializers/job_serializer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Line is too long. [138/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 4,
            "column": 121,
            "length": 18
          }
        }
      ]
    },
    {
      "path": "app/serializers/job_step_serializer.rb",
      "offenses": []
    },
    {
      "path": "app/serializers/member_serializer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Avoid the use of double negation (`!!`).",
          "cop_name": "Style/DoubleNegation",
          "corrected": null,
          "location": {
            "line": 7,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid the use of double negation (`!!`).",
          "cop_name": "Style/DoubleNegation",
          "corrected": null,
          "location": {
            "line": 11,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `%w` or `%W` for an array of words.",
          "cop_name": "Style/WordArray",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 3,
            "length": 69
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 4,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 10,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 19,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 29,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 43,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 55,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 24,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/serializers/notification_serializer.rb",
      "offenses": []
    },
    {
      "path": "app/serializers/project_preview_serializer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Align the parameters of a method call if they span more than one line.",
          "cop_name": "Style/AlignParameters",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 5,
            "length": 14
          }
        }
      ]
    },
    {
      "path": "app/serializers/project_serializer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Line is too long. [142/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 7,
            "column": 121,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/serializers/project_template_serializer.rb",
      "offenses": []
    },
    {
      "path": "app/serializers/pull_serializer.rb",
      "offenses": []
    },
    {
      "path": "app/serializers/step_serializer.rb",
      "offenses": []
    },
    {
      "path": "app/serializers/step_template_serializer.rb",
      "offenses": []
    },
    {
      "path": "app/serializers/timer_serializer.rb",
      "offenses": []
    },
    {
      "path": "app/serializers/user_serializer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Avoid the use of double negation (`!!`).",
          "cop_name": "Style/DoubleNegation",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid the use of double negation (`!!`).",
          "cop_name": "Style/DoubleNegation",
          "corrected": null,
          "location": {
            "line": 24,
            "column": 5,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/serializers/webhook_serializer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "1 trailing blank lines detected.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/services/bitbucket_service.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for create_deploy_key is too high. [18.71/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 10,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 5,
            "length": 83
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 62,
            "length": 74
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 77,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [136/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 22,
            "column": 121,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 38,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 38,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/services/event_service.rb",
      "offenses": []
    },
    {
      "path": "app/services/github_service.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 1,
            "column": 1,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for create_deploy_key is too high. [19.95/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 10,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for create_webhook is too high. [15.84/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 48,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 38,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 38,
            "length": 3
          }
        }
      ]
    },
    {
      "path": "app/services/gitlab_service.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for create_deploy_key is too high. [20.49/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 10,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 67,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Avoid the use of Perl-style backrefs.",
          "cop_name": "Style/PerlBackrefs",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 84,
            "length": 2
          }
        }
      ]
    },
    {
      "path": "app/services/integration_service.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 11,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 11,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 48,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 49,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 7,
            "length": 59
          }
        }
      ]
    },
    {
      "path": "app/services/job_service.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [120/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 39,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 50,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 37,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for start_job is too high. [37/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 59,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Align the parameters of a method call if they span more than one line.",
          "cop_name": "Style/AlignParameters",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 7,
            "length": 426
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 7,
            "length": 426
          }
        },
        {
          "severity": "convention",
          "message": "Align `)` with `(`.",
          "cop_name": "Style/ClosingParenthesisIndentation",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 12,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 46,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 96,
            "column": 39,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 17,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 52,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 65,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [177/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 126,
            "column": 121,
            "length": 57
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 33,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 133,
            "column": 24,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 41,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 135,
            "column": 27,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 137,
            "column": 41,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [134/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 137,
            "column": 121,
            "length": 14
          }
        }
      ]
    },
    {
      "path": "app/services/job_step_service.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 17,
            "length": 9
          }
        }
      ]
    },
    {
      "path": "app/services/project_build_service.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 52,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 58,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 39,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Annotation keywords like `TODO` should be all upper case, followed by a colon, and a space, then a note describing the problem.",
          "cop_name": "Style/CommentAnnotation",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 26,
            "column": 35,
            "length": 58
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `step`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 5,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 23,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 19,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 42,
            "length": 7
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `e`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 45,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 42,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 16,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 39,
            "length": 7
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `e`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 54,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 39,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 40,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 93,
            "column": 37,
            "length": 7
          }
        }
      ]
    },
    {
      "path": "app/services/step_service.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Line is too long. [155/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 121,
            "length": 35
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 44,
            "length": 172
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 9,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Indent the right brace the same as the first position after the preceding left parenthesis.",
          "cop_name": "Style/IndentHash",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 23,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 28,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 3,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix reader method names with `get_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 49,
            "column": 7,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 40,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix reader method names with `get_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 54,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 40,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 47,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 58,
            "column": 7,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 48,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 55,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 65,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "app/services/timer_service.rb",
      "offenses": []
    },
    {
      "path": "app/services/user_plan_service.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for modify is too high. [17.15/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 13,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 5,
            "length": 5
          }
        }
      ]
    },
    {
      "path": "app/services/webhook_service.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 1,
            "column": 1,
            "length": 16
          }
        },
        {
          "severity": "warning",
          "message": "Do not use prefix `_` for a variable that is used.",
          "cop_name": "Lint/UnderscorePrefixedVariableName",
          "corrected": null,
          "location": {
            "line": 11,
            "column": 5,
            "length": 5
          }
        }
      ]
    },
    {
      "path": "app/uploaders/keychain_uploader.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 5,
            "length": 13
          }
        }
      ]
    },
    {
      "path": "app/uploaders/profile_uploader.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 5,
            "length": 25
          }
        }
      ]
    },
    {
      "path": "app/workers/analysis_git_commit_worker.rb",
      "offenses": [
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 8,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 12,
            "column": 7,
            "length": 52
          }
        }
      ]
    },
    {
      "path": "app/workers/analysis_git_pull_request_worker.rb",
      "offenses": [
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 8,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 12,
            "column": 7,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "app/workers/analysis_git_repo_worker.rb",
      "offenses": [
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 8,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 12,
            "column": 7,
            "length": 54
          }
        }
      ]
    },
    {
      "path": "app/workers/destroy_worker.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 10,
            "length": 9
          }
        }
      ]
    },
    {
      "path": "app/workers/integration_worker.rb",
      "offenses": [
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 8,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 7,
            "length": 52
          }
        }
      ]
    },
    {
      "path": "app/workers/log_worker.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `*`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `*`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for work is too high. [30.25/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 9,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Perceived complexity for work is too high. [8/7]",
          "cop_name": "Metrics/PerceivedComplexity",
          "corrected": null,
          "location": {
            "line": 9,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 12,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 35,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 5,
            "length": 79
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 18,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 40,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 38,
            "length": 10
          }
        }
      ]
    },
    {
      "path": "app/workers/msg_worker.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [146/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 10,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 10,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 10,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 10,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 10,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for send_build_finish_send_email is too high. [78.06/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for send_build_finish_send_email is too high. [15/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [64/30]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Perceived complexity for send_build_finish_send_email is too high. [17/7]",
          "cop_name": "Metrics/PerceivedComplexity",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 36,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 22,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 51,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 49,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing to the left of {.",
          "cop_name": "Style/SpaceBeforeBlockBraces",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space between { and | missing.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 35,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 34,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 46,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 58,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 25,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 26,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 24,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 34,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 46,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 58,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 25,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 66,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 63,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 34,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 46,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 58,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 5,
            "length": 141
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 24,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 12,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 37,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 12,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for send_invitation_email is too high. [37.32/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 114,
            "column": 34,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 4,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 4,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 81,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 132,
            "column": 8,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use `unless` with `else`. Rewrite these with the positive case first.",
          "cop_name": "Style/UnlessElse",
          "corrected": null,
          "location": {
            "line": 132,
            "column": 8,
            "length": 307
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 133,
            "column": 12,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [127/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 144,
            "column": 21,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 144,
            "column": 72,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 153,
            "column": 52,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "app/workers/notification_system_worker.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 15,
            "length": 4
          }
        }
      ]
    },
    {
      "path": "app/workers/project_builder_worker.rb",
      "offenses": [
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 9,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 13,
            "column": 7,
            "length": 54
          }
        }
      ]
    },
    {
      "path": "app/workers/status_worker.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `*`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `*`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for work is too high. [43.02/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 9,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for work is too high. [8/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 9,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Perceived complexity for work is too high. [10/7]",
          "cop_name": "Metrics/PerceivedComplexity",
          "corrected": null,
          "location": {
            "line": 9,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 12,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 35,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 5,
            "length": 85
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 5,
            "length": 55
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 40,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 38,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for could_update_job? is too high. [16.31/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 44,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 27,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 46,
            "column": 17,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Use `||` instead of `or`.",
          "cop_name": "Style/AndOr",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 23,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 49,
            "column": 7,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 5,
            "length": 6
          }
        }
      ]
    },
    {
      "path": "app/workers/webhook_worker.rb",
      "offenses": [
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 8,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Provide an exception class and message as arguments to `raise`.",
          "cop_name": "Style/RaiseArgs",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 7,
            "length": 52
          }
        }
      ]
    },
    {
      "path": "config/application.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 9,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 9,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 9,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 9,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 9,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 9,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 29,
            "length": 11
          }
        }
      ]
    },
    {
      "path": "config/boot.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 23,
            "length": 50
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 23,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 23,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 23,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 23,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 23,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 58,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 7,
            "length": 35
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 7,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 7,
            "length": 29
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 7,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 7,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 7,
            "length": 35
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 7,
            "length": 224
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [246/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 24,
            "column": 105,
            "length": 126
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 7,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 7,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 11,
            "length": 23
          }
        }
      ]
    },
    {
      "path": "config/deploy.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "`%w`-literals should be delimited by `(` and `)`.",
          "cop_name": "Style/PercentLiteralDelimiters",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 20,
            "length": 45
          }
        },
        {
          "severity": "convention",
          "message": "`%w`-literals should be delimited by `(` and `)`.",
          "cop_name": "Style/PercentLiteralDelimiters",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 19,
            "length": 66
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 14,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 26,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 14,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 26,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 14,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 26,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 14,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 26,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 14,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 26,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 96,
            "column": 14,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 98,
            "column": 26,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 14,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 120,
            "column": 14,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 14,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 14,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 157,
            "column": 17,
            "length": 36
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 17,
            "length": 35
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 175,
            "column": 17,
            "length": 38
          }
        }
      ]
    },
    {
      "path": "config/environment.rb",
      "offenses": []
    },
    {
      "path": "config/routes.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after colon.",
          "cop_name": "Style/SpaceAfterColon",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 24,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 40,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 43,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 40,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 48,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 48,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 51,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 48,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after colon.",
          "cop_name": "Style/SpaceAfterColon",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after colon.",
          "cop_name": "Style/SpaceAfterColon",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after colon.",
          "cop_name": "Style/SpaceAfterColon",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [170/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 64,
            "column": 121,
            "length": 50
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 122,
            "column": 22,
            "length": 18
          }
        }
      ]
    },
    {
      "path": "config/schedule.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 8,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "config/deploy/alpha.rb",
      "offenses": []
    },
    {
      "path": "config/deploy/beta.rb",
      "offenses": []
    },
    {
      "path": "config/deploy/production.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 19,
            "length": 36
          }
        }
      ]
    },
    {
      "path": "config/deploy/staging.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "`%w`-literals should be delimited by `(` and `)`.",
          "cop_name": "Style/PercentLiteralDelimiters",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 12,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "`%w`-literals should be delimited by `(` and `)`.",
          "cop_name": "Style/PercentLiteralDelimiters",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 12,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "`%w`-literals should be delimited by `(` and `)`.",
          "cop_name": "Style/PercentLiteralDelimiters",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 12,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "`%w`-literals should be delimited by `(` and `)`.",
          "cop_name": "Style/PercentLiteralDelimiters",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 46,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "config/environments/development.rb",
      "offenses": []
    },
    {
      "path": "config/environments/production.rb",
      "offenses": []
    },
    {
      "path": "config/environments/test.rb",
      "offenses": []
    },
    {
      "path": "config/initializers/active_model_errors_codes.rb",
      "offenses": [
        {
          "severity": "warning",
          "message": "Do not use prefix `_` for a variable that is used.",
          "cop_name": "Lint/UnderscorePrefixedVariableName",
          "corrected": null,
          "location": {
            "line": 57,
            "column": 9,
            "length": 6
          }
        }
      ]
    },
    {
      "path": "config/initializers/active_model_serializer.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use `alias` instead of `alias_method` in a class body.",
          "cop_name": "Style/Alias",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 3,
            "length": 12
          }
        }
      ]
    },
    {
      "path": "config/initializers/exception_notification.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "warning",
          "message": "Unused method argument - `options`. If it's necessary, use `_` or `_options` as an argument name to indicate that it won't be used.",
          "cop_name": "Lint/UnusedMethodArgument",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 25,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 1,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 9,
            "length": 53
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 9,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 42,
            "column": 31,
            "length": 114
          }
        }
      ]
    },
    {
      "path": "config/initializers/filter_parameter_logging.rb",
      "offenses": []
    },
    {
      "path": "config/initializers/github_config.rb",
      "offenses": []
    },
    {
      "path": "config/initializers/kaminari_config.rb",
      "offenses": []
    },
    {
      "path": "config/initializers/mailgun.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for send_email is too high. [15.33/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 14,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 20,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body beginning.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 9,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 9,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 9,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 9,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 9,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 9,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 21,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "Avoid rescuing the `Exception` class. Perhaps you meant to rescue `StandardError`?",
          "cop_name": "Lint/RescueException",
          "corrected": null,
          "location": {
            "line": 37,
            "column": 7,
            "length": 33
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 42,
            "column": 31,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 42,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 41,
            "length": 10
          }
        },
        {
          "severity": "warning",
          "message": "Avoid rescuing the `Exception` class. Perhaps you meant to rescue `StandardError`?",
          "cop_name": "Lint/RescueException",
          "corrected": null,
          "location": {
            "line": 45,
            "column": 7,
            "length": 33
          }
        },
        {
          "severity": "convention",
          "message": "Use def with parentheses when there are parameters.",
          "cop_name": "Style/MethodDefParentheses",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 17,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing in default value assignment.",
          "cop_name": "Style/SpaceAroundEqualsInParameterDefault",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 21,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 16,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "config/initializers/mongoid_extended.rb",
      "offenses": []
    },
    {
      "path": "config/initializers/pusher.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 27,
            "length": 119
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 23,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 11,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 17,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 6,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 15,
            "length": 8
          }
        }
      ]
    },
    {
      "path": "config/initializers/qiniu_sdk.rb",
      "offenses": []
    },
    {
      "path": "config/initializers/redis.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 6,
            "column": 1,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space between { and | missing.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 17,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing inside }.",
          "cop_name": "Style/SpaceInsideBlockBraces",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 1,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 75,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 1,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 75,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 18,
            "column": 1,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 18,
            "column": 75,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 1,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 75,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 20,
            "column": 1,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 20,
            "column": 75,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 1,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 75,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 22,
            "column": 1,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 22,
            "column": 81,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 24,
            "column": 1,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 24,
            "column": 74,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 25,
            "column": 1,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 25,
            "column": 75,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 26,
            "column": 1,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 26,
            "column": 75,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "2 trailing blank lines detected.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 1,
            "length": 2
          }
        }
      ]
    },
    {
      "path": "config/initializers/secret_token.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 71,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Line is too long. [173/120]",
          "cop_name": "Metrics/LineLength",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 121,
            "length": 53
          }
        }
      ]
    },
    {
      "path": "config/initializers/sidekiq.rb",
      "offenses": []
    },
    {
      "path": "config/initializers/sneakers.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body beginning.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 7,
            "length": 5
          }
        }
      ]
    },
    {
      "path": "config/initializers/wrap_parameters.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "1 trailing blank lines detected.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "config/unicorn/production.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 29,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 8,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 13,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 13,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Use `&&` instead of `and`.",
          "cop_name": "Style/AndOr",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 42,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 7,
            "length": 16
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `worker`. If it's necessary, use `_` or `_worker` as an argument name to indicate that it won't be used.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 25,
            "length": 6
          }
        },
        {
          "severity": "warning",
          "message": "`File.exists?` is deprecated in favor of `File.exist?`.",
          "cop_name": "Lint/DeprecatedClassMethods",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 11,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 20,
            "length": 6
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `server`. You can omit all the arguments if you don't care about them.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 16,
            "length": 6
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `worker`. You can omit all the arguments if you don't care about them.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 24,
            "length": 6
          }
        }
      ]
    }
  ],
  "summary": {
    "offense_count": 1642,
    "target_file_count": 168,
    "inspected_file_count": 168
  }
}
